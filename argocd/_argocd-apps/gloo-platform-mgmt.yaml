---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-gloo-platform-crds
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  destination:
    namespace: gloo-mesh
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: gloo-platform-crds
    repoURL: https://storage.googleapis.com/gloo-platform/helm-charts #https://storage.googleapis.com/gloo-platform-dev/platform-charts/helm-charts
    targetRevision: v2.4.3
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-gloo-platform
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  destination:
    namespace: gloo-mesh
    server: https://kubernetes.default.svc
  project: default
  syncPolicy:
    # automated:
    #   prune: true
    #   selfHeal: true 
    syncOptions:
    - CreateNamespace=false
  source:
    chart: gloo-platform
    repoURL: https://storage.googleapis.com/gloo-platform/helm-charts # https://storage.googleapis.com/gloo-platform-dev/platform-charts/helm-charts
    targetRevision: v2.4.3
    helm:
      values: |
        common:
          cluster: mgmt-cluster
        demo:
          manageAddonNamespace: true
        extAuthService:
          enabled: true
          extAuth:
            opaServer:
              enabled: true
              configYaml: |
              services:
                s3:
                  url: https://opa-demo-931713665590.s3.us-east-1.amazonaws.com
                  credentials:
                    s3_signing:
                      web_identity_credentials:
                        aws_region: us-east-1
                        session_name: gloo-extauth-opa
              bundles:
                authz:
                  service: s3
                  resource: bundle.tar.gz
              config: |
              services:
                s3:
                  url: https://opa-demo-931713665590.s3.us-east-1.amazonaws.com
                  credentials:
                    s3_signing:
                      web_identity_credentials:
                        aws_region: us-east-1
                        session_name: gloo-extauth-opa
              bundles:
                authz:
                  service: s3
                  resource: bundle.tar.gz
        licensing:
          licenseSecretName: license
        glooAgent:
          enabled: true
          relay:
            serverAddress: "gloo-mesh-mgmt-server.gloo-mesh:9900"
        glooMgmtServer:
          enabled: true
        glooUi:
          enabled: true
        istioInstallations:
          enabled: false
        legacyMetricsPipeline:
          enabled: false
        prometheus:
          enabled: true
        telemetryCollector:
          config:
            exporters:
              otlp:
                endpoint: gloo-telemetry-gateway.gloo-mesh:4317
          enabled: true
        telemetryGateway:
          enabled: true
        global:
          common:
            cluster: mgmt-cluster
---
apiVersion: admin.gloo.solo.io/v2
kind: KubernetesCluster
metadata:
  name:  mgmt-cluster
  namespace: gloo-mesh
spec:
  clusterDomain: cluster.local

---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: default
  namespace: gloo-mesh
spec:
  workloadClusters:
  - name: '*'
    namespaces:
    - name: "*"
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: default
  namespace: gloo-mesh
spec:
  options:
    serviceIsolation:     
      enabled: false
    federation:
      enabled: false
---
apiVersion: admin.gloo.solo.io/v2
kind: IstioLifecycleManager
metadata:
  name: mgmt-cluster-istiod
  namespace: gloo-mesh
spec:
  installations:
  # The revision for this installation, such as 1-17-3
  - revision: 1-18-3
    # List all workload clusters to install Istio into
    clusters:
    - name: mgmt-cluster
      defaultRevision: true
    istioOperatorSpec:
      # Only the control plane components are installed
      # (https://istio.io/latest/docs/setup/additional-setup/config-profiles/)
      profile: minimal
      # Solo.io Istio distribution repository; required for Gloo Istio.
      # You get the repo key from your Solo Account Representative.
      hub: us-docker.pkg.dev/gloo-mesh/istio-workshops
      # Any Solo.io Gloo Istio tag
      tag: 1.18.3-solo
      namespace: istio-system
      # Mesh configuration
      meshConfig:
        # Enable access logging only if using.
        accessLogFile: /dev/stdout
        # Encoding for the proxy access log (TEXT or JSON). Default value is TEXT.
        accessLogEncoding: JSON
        # Enable span tracing only if using.
        enableTracing: true
        defaultConfig:
          # Wait for the istio-proxy to start before starting application pods
          holdApplicationUntilProxyStarts: true
          # Enable Gloo accesslog service. Required for Gloo Access Logging
          envoyAccessLogService:
            address: gloo-mesh-agent.gloo-mesh:9977
          proxyMetadata:
            # For known hosts, enable the Istio agent to handle DNS requests for any custom ServiceEntry, such as non-Kubernetes services.
            # Unknown hosts are automatically resolved using upstream DNS servers in resolv.conf (for proxy-dns)
            ISTIO_META_DNS_CAPTURE: "true"
            # Enable automatic address allocation within Envoy to route to non-Kubernetes services.
            # Useful for external services where the IP address may change by creating an internal stable IP address that represents the external host.
            # For more info, see https://istio.io/latest/docs/ops/configuration/traffic-management/dns-proxy/
            ISTIO_META_DNS_AUTO_ALLOCATE: "true"
        # Set the default behavior of the sidecar for handling outbound traffic
        # from the application
        outboundTrafficPolicy:
          mode: ALLOW_ANY
        # The administrative root namespace for Istio configuration
        rootNamespace: istio-system
      # Traffic management
      components:
        pilot:
          k8s:
            env:
            # Disable selecting workload entries for local service routing, so that Kubernetes 
            # will not automatically match services to workload entries with matching selector labels.
            # Required for Gloo Mesh VirtualDestination functionality.
            # For more info, see https://istio.io/latest/docs/reference/commands/pilot-discovery/
            - name: PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES
              value: "false"
            # Skip the validation step for mTLS within the cluster.
            # This approach is not recommended if you integrated Istio with your own CA,
            # but is useful for PoCs or demos in which you use self-signed certificates.
            - name: PILOT_SKIP_VALIDATE_TRUST_DOMAIN
              value: "true"
